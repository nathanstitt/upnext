#pragma once#include "lvgl.h"#include "meteocon.h"#include <inttypes.h>#include <vector>#include <chrono>#include "weather_api.h"class WeatherUI {public:    WeatherUI(WeatherAPI* api);    void setup(lv_obj_t *parent);    void tick();    void init_scr_del_flag();    bool b1sec = false;    bool b5min = false;    // uint8_t clockHr = 0;    // uint8_t clockSec = 0;    // uint8_t clockMin = 0;    std::vector<lv_obj_t*> lines;    std::vector<Meteocon*> daily_forecasts;    lv_obj_t *screen;    bool screen_del;    lv_obj_t *near_forecast;    // lv_obj_t *screen_label_clock;    lv_obj_t *screen_label_temp;    lv_obj_t *screen_label_temp_point;    lv_obj_t *temp_type;  //  lv_obj_t *screen_label_city;    lv_obj_t *screen_img_meteocon;    // lv_obj_t *screen_label_14;    // lv_obj_t *screen_label_date;    lv_obj_t *screen_line_1;    lv_obj_t *screen_label_feels;    lv_obj_t *screen_label_forcast_desc;    lv_obj_t *screen_label_pop;    lv_obj_t *daily_forecast_line;    lv_obj_t* icon_cloudy;    lv_obj_t* uvi_icon;    lv_obj_t *forecast_conditions_icon;    lv_obj_t *humidity_icon;    lv_obj_t *screen_label_humidity;    lv_obj_t *screen_label_temp_high;    lv_obj_t *screen_label_temp_low;    lv_obj_t *screen_label_uvi;    lv_obj_t *pressure_icon;    lv_obj_t* screen_label_pressure;private:    WeatherAPI *api;};// extern uint8_t clockHr, clockMin, clockSec;// extern bool b1sec, b5min;//// void setup_ui(WeatherUI *ui);//  extern weather_ui guider_ui;